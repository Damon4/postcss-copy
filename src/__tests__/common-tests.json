[{
  "name": "template: 'assets/[hash].[ext][query]'",
  "opts": {
    "template": "assets/[hash].[ext][query]"
  },
  "assertions": {
    "index": [{
      "desc": "@index.css => process url image (simple)",
      "match": "assets/b6c8f21e92b50900.jpg"
    }, {
      "desc": "@index.css => process url image (with parameters)",
      "match": "assets/0ed7c955a2951f04.jpg?#iefix&v=4.4.0"
    }, {
      "desc": "@index.css => extra rules in image (simple)",
      "match": "url('assets/b6c8f21e92b50900.jpg') center center",
      "regex-simple": true
    }],
    "component": [{
      "desc": "@component/index.css => process url image (simple)",
      "match": "assets/27da26a06634b050.jpg"
    }, {
      "desc": "@component/index.css => process url image (with parameters)",
      "match": "assets/0ed7c955a2951f04.jpg?#iefix&v=4.4.0"
    }],
    "external_libs": [{
      "desc": "@external_libs/bootstrap.css => process url fonts ttf",
      "match": "assets/44bc1850f5709722.ttf"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot",
      "match": "assets/86b6f62b7853e67d.eot"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot?#iefix",
      "match": "assets/86b6f62b7853e67d.eot?#iefix"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff",
      "match": "assets/278e49a86e634da6.woff"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff2",
      "match": "assets/ca35b697d99cae4d.woff2"
    }],
    "exists": [
      "assets/b6c8f21e92b50900.jpg",
      "assets/0ed7c955a2951f04.jpg",
      "assets/27da26a06634b050.jpg",
      "assets/44bc1850f5709722.ttf",
      "assets/86b6f62b7853e67d.eot",
      "assets/278e49a86e634da6.woff",
      "assets/ca35b697d99cae4d.woff2"
    ],
    "no-modified": "assets/0ed7c955a2951f04.jpg"
  }
}, {
  "name": "template: '[path]/[hash].[ext][query]'",
  "opts": {
    "template": "[path]/[hash].[ext][query]"
  },
  "assertions": {
    "index": [{
      "desc": "@index.css => process url image (simple)",
      "match": "images/b6c8f21e92b50900.jpg"
    }, {
      "desc": "@index.css => process url image (with parameters)",
      "match": "images/0ed7c955a2951f04.jpg?#iefix&v=4.4.0"
    }, {
      "desc": "@index.css => extra rules in image (simple)",
      "match": "url('images/b6c8f21e92b50900.jpg') center center",
      "regex-simple": true
    }],
    "component": [{
      "desc": "@component/index.css => process url image (simple)",
      "match": "component/images/27da26a06634b050.jpg"
    }, {
      "desc": "@component/index.css => process url image (with parameters)",
      "match": "images/0ed7c955a2951f04.jpg?#iefix&v=4.4.0"
    }],
    "external_libs": [{
      "desc": "@external_libs/bootstrap.css => process url fonts ttf",
      "match": "bootstrap/fonts/44bc1850f5709722.ttf"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot",
      "match": "bootstrap/fonts/86b6f62b7853e67d.eot"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot?#iefix",
      "match": "bootstrap/fonts/86b6f62b7853e67d.eot?#iefix"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff",
      "match": "bootstrap/fonts/278e49a86e634da6.woff"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff2",
      "match": "bootstrap/fonts/ca35b697d99cae4d.woff2"
    }],
    "exists": [
      "images/b6c8f21e92b50900.jpg",
      "images/0ed7c955a2951f04.jpg",
      "component/images/27da26a06634b050.jpg",
      "bootstrap/fonts/44bc1850f5709722.ttf",
      "bootstrap/fonts/86b6f62b7853e67d.eot",
      "bootstrap/fonts/278e49a86e634da6.woff",
      "bootstrap/fonts/ca35b697d99cae4d.woff2"
    ],
    "no-modified": "images/0ed7c955a2951f04.jpg"
  }
}, {
  "name": "template: '[path]/[name].[ext][query]'",
  "opts": {
    "template": "[path]/[name].[ext][query]"
  },
  "assertions": {
    "index": [{
      "desc": "@index.css => process url image (simple)",
      "match": "images/other.jpg"
    }, {
      "desc": "@index.css => process url image (with parameters)",
      "match": "images/test.jpg?#iefix&v=4.4.0"
    }, {
      "desc": "@index.css => extra rules in image (simple)",
      "match": "url('images/other.jpg') center center",
      "regex-simple": true
    }],
    "component": [{
      "desc": "@component/index.css => process url image (simple)",
      "match": "component/images/component.jpg"
    }, {
      "desc": "@component/index.css => process url image (with parameters)",
      "match": "images/test.jpg?#iefix&v=4.4.0"
    }],
    "external_libs": [{
      "desc": "@external_libs/bootstrap.css => process url fonts ttf",
      "match": "bootstrap/fonts/glyphicons-halflings-regular.ttf"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot",
      "match": "bootstrap/fonts/glyphicons-halflings-regular.eot"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot?#iefix",
      "match": "bootstrap/fonts/glyphicons-halflings-regular.eot?#iefix"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff",
      "match": "bootstrap/fonts/glyphicons-halflings-regular.woff"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff2",
      "match": "bootstrap/fonts/glyphicons-halflings-regular.woff2"
    }],
    "exists": [
      "images/other.jpg",
      "images/test.jpg",
      "component/images/component.jpg",
      "bootstrap/fonts/glyphicons-halflings-regular.ttf",
      "bootstrap/fonts/glyphicons-halflings-regular.eot",
      "bootstrap/fonts/glyphicons-halflings-regular.woff",
      "bootstrap/fonts/glyphicons-halflings-regular.woff2"
    ],
    "no-modified": "images/test.jpg"
  }
}, {
  "name": "template: '[hash].[ext][query]', hashFunction: {custom}",
  "opts": {
    "hashFunction": "custom"
  },
  "assertions": {
    "index": [{
      "desc": "@index.css => process url image (simple)",
      "match": "tsjyHpK1CQAzLrWA3hok0f01nks.jpg"
    }, {
      "desc": "@index.css => process url image (with parameters)",
      "match": "DtfJVaKVHwRz_PkVXOweAq13S0o.jpg?#iefix&v=4.4.0"
    }, {
      "desc": "@index.css => extra rules in image (simple)",
      "match": "url('tsjyHpK1CQAzLrWA3hok0f01nks.jpg') center center",
      "regex-simple": true
    }],
    "component": [{
      "desc": "@component/index.css => process url image (simple)",
      "match": "J9omoGY0sFB4U5nyxLRB6t3Ms7w.jpg"
    }, {
      "desc": "@component/index.css => process url image (with parameters)",
      "match": "DtfJVaKVHwRz_PkVXOweAq13S0o.jpg?#iefix&v=4.4.0"
    }],
    "external_libs": [{
      "desc": "@external_libs/bootstrap.css => process url fonts ttf",
      "match": "RLwYUPVwlyJnsWmuGPHLBrYR_6I.ttf"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot",
      "match": "hrb2K3hT5n0-Y19lEqWl78WOo8M.eot"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts eot?#iefix",
      "match": "hrb2K3hT5n0-Y19lEqWl78WOo8M.eot?#iefix"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff",
      "match": "J45JqG5jTabyoC87R92dKo8mIQ8.woff"
    }, {
      "desc": "@external_libs/bootstrap.css => process url fonts woff2",
      "match": "yjW2l9mcrk0bYPLWD803dxmH6wc.woff2"
    }],
    "exists": [
      "tsjyHpK1CQAzLrWA3hok0f01nks.jpg",
      "DtfJVaKVHwRz_PkVXOweAq13S0o.jpg",
      "J9omoGY0sFB4U5nyxLRB6t3Ms7w.jpg",
      "RLwYUPVwlyJnsWmuGPHLBrYR_6I.ttf",
      "hrb2K3hT5n0-Y19lEqWl78WOo8M.eot",
      "J45JqG5jTabyoC87R92dKo8mIQ8.woff",
      "yjW2l9mcrk0bYPLWD803dxmH6wc.woff2"
    ],
    "no-modified": "DtfJVaKVHwRz_PkVXOweAq13S0o.jpg"
  }
}, {
  "name": "template: 'assets/[hash].[ext]?custom=1&[qparams]#[qhash]'",
  "opts": {
    "template": "assets/[hash].[ext]?custom=1&[qparams]#[qhash]"
  },
  "assertions": {
    "index": [{
      "desc": "@index.css => process url image (simple)",
      "match": "assets/b6c8f21e92b50900.jpg?custom=1&#"
    }, {
      "desc": "@index.css => process url image (with parameters)",
      "match": "assets/0ed7c955a2951f04.jpg?custom=1&#iefix&v=4.4.0"
    }, {
      "desc": "@index.css => extra rules in image (simple)",
      "match": "url('assets/b6c8f21e92b50900.jpg?custom=1&#') center center",
      "regex-simple": true
    }],
    "component": [],
    "external_libs": [],
    "exists": [
      "assets/b6c8f21e92b50900.jpg",
      "assets/0ed7c955a2951f04.jpg"
    ],
    "no-modified": "assets/0ed7c955a2951f04.jpg"
  }
}, {
  "name": "template: 'assets/[hash].[ext][query]', with postcss.to && preservePath === false",
  "opts": {
    "template": "assets/[hash].[ext][query]",
    "to": "styles/index.css"
  },
  "assertions": {
    "index": [{
      "desc": "@index.css => process url image (simple)",
      "match": "../assets/b6c8f21e92b50900.jpg"
    }, {
      "desc": "@index.css => process url image (with parameters)",
      "match": "../assets/0ed7c955a2951f04.jpg?#iefix&v=4.4.0"
    }, {
      "desc": "@index.css => extra rules in image (simple)",
      "match": "url('../assets/b6c8f21e92b50900.jpg') center center",
      "regex-simple": true
    }],
    "component": [],
    "external_libs": [],
    "exists": [
      "assets/b6c8f21e92b50900.jpg",
      "assets/0ed7c955a2951f04.jpg"
    ],
    "no-modified": "assets/0ed7c955a2951f04.jpg"
  }
}, {
  "name": "template: '[path]/[name].[ext][query]', with postcss.to == postcss.from",
  "opts": {
    "template": "[path]/[name].[ext][query]",
    "to": "equal-from"
  },
  "assertions": {
    "index": [],
    "component": [{
      "desc": "@component/index.css => process url image (simple)",
      "match": "images/component.jpg"
    }, {
      "desc": "@component/index.css => process url image (with parameters)",
      "match": "../images/test.jpg?#iefix&v=4.4.0"
    }],
    "external_libs": [],
    "exists": [
      "component/images/component.jpg",
      "images/test.jpg"
    ]
  }
}, {
  "name": "template: '[path]/[name].[ext][query]', with preservePath === true",
  "opts": {
    "template": "[path]/[name].[ext][query]",
    "preservePath": true,
    "to": "component/index.css"
  },
  "assertions": {
    "index": [],
    "component": [{
      "desc": "@component/index.css => process url image (simple)",
      "match": "images/component.jpg"
    }, {
      "desc": "@component/index.css => process url image (with parameters)",
      "match": "../images/test.jpg?#iefix&v=4.4.0"
    }],
    "external_libs": [],
    "exists": [
      "component/images/component.jpg",
      "images/test.jpg"
    ]
  }
}]
